<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAADV0RVh0VGl0
        bGUAVGVjaG5vbG9neTtTZXR0aW5ncztPcHRpb25zO0N1c3RvbWl6O1Byb3BlcnRpZXMPtQNcAAAI80lE
        QVRYR6VXCVCUVxL+TTTEI14Yk3hskl1NmVpNre5aJorXQoJEWAgqCAIKgoIMIgM4gAynnA4gIugYYYL3
        Ei8UPAIih3IjMyg3I5cwInLJJZiZ3u4fx2VnxyJVdtVX//963ntfv359/MPww0SMd+gvCBFzICSBORCc
        wKCMQ7znwA3+WM/QcsLrMQut9QYfWDvyZ+P7+zSHdK6+cQzXJ5bh8o8yLvwYVI0IAIwJllQ5UChQgRu6
        +cUt4/kLE/0FiYPuvnFC1I1HEOEELj9GyA9NGHTxPnJqNzd4OepYIxQKBa5XMM5e0TgckdFEbwPjGXSS
        XUhAYU/u7nfseG7RIxgaHoYrqTmw1zOKi/qJTjwB91JKFgwNDUNu4UPgeETFo56MGyfH9XK5guHwInE4
        IuoIVcHwAk6MJieMx9NFZ94XQ//LIXiJRhwTXQUX7xiIS7gCw8O/Q//gMKRnFYODaxj5WwNB3mHXO7gd
        wseIqCNUBQl7agRtQqfR4PAEQVdv5MAAErV39OKJXwGeEIZfyaG7dwBe9A3Cxet3YefeQPL3FMSHiA9e
        r6f9WFFHqAqS9+ycgxbu9Yo65OAW7uTgGu57IOhEf32TDHp6B+Fpew8LWXs3yJ51QyuCxm3PusA39MQr
        K3ufcOs9/onWjgEi4217/477vTFCHaEqSMZzeBFHf7tbBOcvpyPS4OmzTugbGGKJWtq6oOVpFzxh0cmi
        WdYJjU/aQdbWAYkXbkBGdjHcQVjs8k7E/cgb5FG1hKpg1m8wmcb1PtLT1zcAgy+HYRADrPNFP0tMRM2y
        DmiSPYeG1udQ3zKCqscykFQ1QXldMzzrQG88f4HPbrDnhvR/u0b/M+Sm61RLqApm0eLlH+52CU28nJKJ
        Lh+AxtYOaCSiJ4R2KJLUgJunAEwtXYHrIYB7mB0lFQ1QUt4AxQ/rWUhx3rGEy7DFyv0o8k5E/HEPoJC1
        Ey3t+QFHhEnwrLMXpM1tIG1qg7rGNuDxD8NPJnuCcc4nm8ycBF6+0Sx5QZkU8iVSqMN5PsEnwGCLAx/n
        TEMoC5daQlWQkLWUSjNtnAKHurp7oabhKVTVy6BK2gp2jn6/z5o9Zz7+rvnlgr8u2LU3kDUs90Et5JbU
        st4ytfagneYgJiOUKamWUBUkFLWTt9p4CI6cSGKvoQKJH9a0IJ6A4Mhp2GbjHohz5lrZ8cIiYs5AA15P
        TlENZBdVwaPqZvANEYKuoa0vzpmBoHT84wZ8vWTFVLOdnucvJmdggRmCBjyRGANMXNUI4grCY4iLvwQe
        fkdBiAWptr4VKuta4G5+JWTkV0BGXgXUN7dD7M9J8KOxg2j6zE/oGlgvqCNUBbP4b6s0d+zx76YobsEU
        I/dKKpswuBogr1QKeeI6qJS2YEpiHcC0rKhthczCKkjPLUcDyiFfXAs5JdXwqKYRNlu69f/5q6Vzkfx/
        CtJYMtF4m8sx0dkUiIw7DxGx5+AebVxahwSVcCevnEVa7kNIu08og9v3ytjx7ZxS8As/CZHHL0Cs6Aro
        GOw8g/tNRZABbJNCjCkT1vxgusTAxPHgBiO7/bpGtmHWjn59Gbll6OYKuI2Et5DwZo4EbmZL4AbiVk4Z
        pNwpAgs7/ss1P5jHrNezEmrr25xb9p3et7gfpSEZQNdAUBqixP8JTaDUoYUfIWZrb9weHhadCAWSOriR
        JYFsdHEevt8tqIRrd0tYj3gFxsFqHTPqBeRyTcR0BGWBhm+4aHtw9AUIOnwBfMIStqOO9icoDRvnF05F
        E8XIjDota5nSkKk6+tYCoegyiCsbkbQCnD0iQG+TI/tMu/cQvSCG0OhToKVjdhjna67W1p8VEHk6019w
        +py9c+A3+LxWUdMEFRgX/FDRdatdvCXeISfP8EPjc9fqGM3ENW9SlTEwdWZ6+gbolRT0w2RtfevYk6eT
        MQir4WBkIqCb41C/cPX3ZsKI2LNwNa0QwjE9V39vfgz1M/wEp+7U1beA5NFjiIm/KkcD5C+xrLd3vADf
        MJE8SnjxVRHuVY4G8QKOZ+Eaqjt0YIbZuJnDdL3oZzp7+mlISo1l321csW6DlUjfhNO7Tm/7NdR9iqAc
        /3StruU1PWOHvlU6ZomLl/1zJeo+4ofEJ0nKpdCNPaSrpw+aWtrZ7wZZWzdmVAO29SG2haem54OZrdcV
        XPOmXDN6xnsYXWMHRvcnexoqvUAdbdrcz7/+k+bH8+j7j8ZsnEyaMl3zs3kLv8B3MojufLK5jeuyqOMX
        5Z3dfWzLpo5JT7anYI1oRINqsIFx9h+Sr1xvqIVrKNbemqrKeKAJysCh8Wg9VTv6TcPZK2KHm19squfB
        nxVPsGs2YzNLz3oAHNdD4OQqgMxcCVQjeVb+I3DyiJLvcg66bWHrYTNn/l/oQ2bEC2qEyFRBMnpMnpq4
        P0AID8pq2RLej98QdNptNj6wcu0WCy1tU0v7feHQhEblFNZAOqZzaloB7NoXQk2AKuZ4teVxLLwWsn4S
        lx8LxeJq9gOlrkEG1VIZ7HYJA50frWx1DXbY8XyPQy02t9vZWDsyS+Hk+TSw4QTSJpS272yAhsGWPRwj
        831pju4CRV5JFZu6adml4OkvBJ9QEWRgISvFnnIuOYe+F0DP2D4bs4pyn67gfbUEY+G10DVQPExduc5g
        lYf/0d+l2EeysFhlYKGiRkZdtQg/WFIzxXD5VhGY2x6QL1j0D11cMwtBqThOLcFYGCUUB1Ms7Lx/vZSS
        DWXYRW9mieFscjZcu/MAkn8rhl+SMiDpRgH8O7UQAiNPwSpt02RcQ8WIgvidDaBrmGxhdyAvNb0QDgt/
        BRMrNzDf6aW4dKsQLqTkwcbNjgqT7e4Kv0MiCI9LghVrNhXgmpH7f0cD6ArYOJj/xaJ5Wyxdc7V0tl7/
        8qulG/9lwrkXf+4mRAovUbW8//mCbwyXaxldRRTPmDV3Aa6Z9HrtO3tAmY5s4UJQcZq9Xm/bPkOzfWC4
        1RmWrtjggjqqpHTv9DuRj5yeRB3BWFARpSfIELpXMoa+CaiCEsgwZSUdXdRGRB3BWHiL0KZKKKul8u+a
        kvS/xKwwzH8ALBnyGAPyeiwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="resource.Image1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>